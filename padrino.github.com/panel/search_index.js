var search_data = {"index":{"searchIndex":["padrino","admin","helpers","abstractformbuilder","middleware","flashmiddleware","orm","abstract","account","classmethods","instancemethods","base","classmethods","instancemethods","activerecord","account","base","classmethods","instancemethods","datamapper","account","base","classmethods","instancemethods","mongomapper","account","base","classmethods","instancemethods","utils","crypt","literal","application","helpers","assettaghelpers","formbuilder","abstractformbuilder","standardformbuilder","formhelpers","formathelpers","outputhelpers","renderhelpers","taghelpers","logger","mailer","base","delivery","mailobject","mounter","racklogger","reloader","stat","tasks","<<()","==()","admin_menu()","allowed?()","app_object()","authenticate()","block_is_erb?()","block_is_template?()","body()","box()","build_object()","build_tmail()","button_tag()","calculate_paths()","call()","call()","call()","called_from()","caller_files()","caller_locations()","capture_erb()","capture_html()","changed?()","check_box()","check_box_tag()","close()","column_store()","concat_content()","configured_form_builder_class()","content_blocks()","content_for()","content_tag()","content_type()","controller()","current_account()","decrypt()","default_configuration!()","default_errors!()","default_filters!()","default_routes!()","deliver()","deliver()","delivery_method()","distance_of_time_in_words()","encrypt()","erb_concat()","error_messages()","error_messages_for()","errors_keys()","errors_keys()","escape_html()","escape_javascript()","ext_search()","ext_search()","field_error()","field_human_name()","field_id()","field_name()","field_set_tag()","field_types()","field_value()","fields_for()","figure_path()","file_field()","file_field_tag()","files()","find_view_path()","first_caller()","flash_tag()","flush()","form_for()","form_tag()","h()","h!()","has()","has_erb_buffer?()","hidden_field()","hidden_field_tag()","hidden_form_method_field()","human_attribute_name()","human_attribute_name()","identity_tag_attributes()","image_path()","image_submit()","image_submit_block()","image_submit_tag()","image_tag()","inherited()","input_tag()","insert_mounted_app()","javascript_include_tag()","javascript_path()","javascript_tag()","js_escape_html()","label()","label_tag()","layout()","link_to()","load!()","load_dependencies()","load_paths()","loaded?()","locate_app_file()","logged_in?()","logger()","login_required()","mail()","mail_fields()","mail_to()","map_onto()","meta_tag()","method_missing()","mount()","mount_core()","mounted_apps()","mounted_root()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new_record?()","object_class()","object_name()","open_window_grid()","open_window_grid()","options_for_select()","options_from_collection()","orm()","orm()","orm()","parse_conditions()","partial()","password_clean()","password_field()","password_field_tag()","pluralize()","properties()","push()","radio_button()","radio_button_tag()","redirect_back_or_default()","register_framework_extensions()","register_initializer()","register_initializers()","registered()","registered()","reload!()","reload!()","reload!()","render_partial()","require_dependencies()","require_load_paths()","reset_routes!()","respond_to?()","rotation()","router()","safe_load()","safe_stat()","sanitize_html()","select()","select_tag()","send_mail()","sendmail_binary()","set_current_account()","set_load_paths()","setup!()","setup_application!()","show_messages_for()","simple_format()","static_file?()","store_location!()","stylesheet_link_tag()","stylesheet_path()","stylesheet_tag()","submit()","submit_block()","submit_tag()","tab()","table_name()","tag()","template_path()","text_area()","text_area_tag()","text_field()","text_field_tag()","time_ago_in_words()","title()","to()","to_l()","to_param()","transport()","transport_via_sendmail()","transport_via_smtp()","truncate()","update_attributes()","uri_root_path()","url()","url()","url_for()","url_for()","using_smtp?()","values_matches_field?()","version()","via_options()","word_wrap()","yield_content()","readme.rdoc","padrino-admin.rb","authentication.rb","view.rb","flash_middleware.rb","abstract.rb","activerecord.rb","datamapper.rb","mongomapper.rb","crypt.rb","literal.rb","readme.rdoc","application.rb","caller.rb","loader.rb","logger.rb","mounter.rb","reloader.rb","stat.rb","tasks.rb","version.rb","readme.rdoc","padrino-helpers.rb","asset_tag_helpers.rb","abstract_form_builder.rb","standard_form_builder.rb","form_helpers.rb","format_helpers.rb","output_helpers.rb","render_helpers.rb","tag_helpers.rb","readme.rdoc","padrino-mailer.rb","base.rb","delivery.rb","mail_object.rb"],"longSearchIndex":["padrino-mailer/lib/padrino-mailer.rb","padrino","padrino::admin","padrino::admin::helpers","padrino::admin","padrino::admin::middleware","padrino::admin","padrino::admin::orm","padrino::admin::orm::abstract","padrino::admin::orm::abstract::account","padrino::admin::orm::abstract::account","padrino::admin::orm::abstract","padrino::admin::orm::abstract::base","padrino::admin::orm::abstract::base","padrino::admin::orm","padrino::admin::orm::activerecord","padrino::admin::orm::activerecord","padrino::admin::orm::activerecord::base","padrino::admin::orm::activerecord::base","padrino::admin::orm","padrino::admin::orm::datamapper","padrino::admin::orm::datamapper","padrino::admin::orm::datamapper::base","padrino::admin::orm::datamapper::base","padrino::admin::orm","padrino::admin::orm::mongomapper","padrino::admin::orm::mongomapper","padrino::admin::orm::mongomapper::base","padrino::admin::orm::mongomapper::base","padrino::admin","padrino::admin::utils","padrino::admin::utils","padrino","padrino","padrino::helpers","padrino::helpers","padrino::helpers::formbuilder","padrino::helpers::formbuilder","padrino::helpers","padrino::helpers","padrino::helpers","padrino::helpers","padrino::helpers","padrino","padrino","padrino::mailer","padrino::mailer","padrino::mailer","padrino","padrino","padrino","padrino","padrino","padrino::logger","padrino::mounter","padrino::admin::helpers","padrino::admin::helpers","padrino::mounter","padrino::admin::orm::abstract::account::classmethods","padrino::helpers::outputhelpers","padrino::helpers::outputhelpers","padrino::mailer::base","padrino::admin::helpers","padrino::helpers::formbuilder::abstractformbuilder","padrino::mailer::delivery","padrino::helpers::formhelpers","padrino::application","padrino::admin::middleware::flashmiddleware","padrino::racklogger","padrino::reloader","padrino","padrino","padrino","padrino::helpers::outputhelpers","padrino::helpers::outputhelpers","padrino::stat","padrino::helpers::formbuilder::abstractformbuilder","padrino::helpers::formhelpers","padrino::logger","padrino::admin::orm::abstract::base::classmethods","padrino::helpers::outputhelpers","padrino::helpers::formhelpers","padrino::helpers::outputhelpers","padrino::helpers::outputhelpers","padrino::helpers::taghelpers","padrino::application","padrino::application","padrino::admin::helpers","padrino::admin::utils::crypt","padrino::application","padrino::application","padrino::application","padrino::application","padrino::mailer::base","padrino::mailer::mailobject","padrino::mailer::mailobject","padrino::helpers::formathelpers","padrino::admin::utils::crypt","padrino::helpers::outputhelpers","padrino::helpers::formbuilder::abstractformbuilder","padrino::helpers::formhelpers","padrino::admin::orm::activerecord::base::instancemethods","padrino::admin::orm::datamapper::base::instancemethods","padrino::helpers::formathelpers","padrino::helpers::formathelpers","padrino::admin::orm::activerecord::base::classmethods","padrino::admin::orm::datamapper::base::classmethods","padrino::helpers::formbuilder::abstractformbuilder","padrino::helpers::formbuilder::abstractformbuilder","padrino::helpers::formbuilder::abstractformbuilder","padrino::helpers::formbuilder::abstractformbuilder","padrino::helpers::formhelpers","padrino::helpers::formbuilder::abstractformbuilder","padrino::helpers::formbuilder::abstractformbuilder","padrino::helpers::formhelpers","padrino::stat","padrino::helpers::formbuilder::abstractformbuilder","padrino::helpers::formhelpers","padrino::tasks","padrino::application","padrino","padrino::helpers::assettaghelpers","padrino::logger","padrino::helpers::formhelpers","padrino::helpers::formhelpers","padrino::helpers::formathelpers","padrino::helpers::formathelpers","padrino::admin::orm::datamapper::base::classmethods","padrino::helpers::outputhelpers","padrino::helpers::formbuilder::abstractformbuilder","padrino::helpers::formhelpers","padrino::helpers::formhelpers","padrino::admin::orm::activerecord::base::classmethods","padrino::admin::orm::datamapper::base::classmethods","padrino::helpers::taghelpers","padrino::helpers::assettaghelpers","padrino::helpers::formbuilder::abstractformbuilder","padrino::helpers::formbuilder::standardformbuilder","padrino::helpers::formhelpers","padrino::helpers::assettaghelpers","padrino::application","padrino::helpers::taghelpers","padrino","padrino::helpers::assettaghelpers","padrino::helpers::assettaghelpers","padrino::helpers::assettaghelpers","padrino::helpers::formathelpers","padrino::helpers::formbuilder::abstractformbuilder","padrino::helpers::formhelpers","padrino::application","padrino::helpers::assettaghelpers","padrino","padrino","padrino::application","padrino","padrino::mounter","padrino::admin::helpers","padrino","padrino::admin::helpers","padrino::mailer::delivery","padrino::mailer::base","padrino::helpers::assettaghelpers","padrino::mounter","padrino::helpers::assettaghelpers","padrino::mailer::base","padrino","padrino","padrino","padrino","padrino::admin::middleware::flashmiddleware","padrino::application","padrino::helpers::formbuilder::abstractformbuilder","padrino::logger","padrino::mailer::base","padrino::mailer::mailobject","padrino::mounter","padrino::racklogger","padrino::reloader","padrino::admin::orm::datamapper::base::instancemethods","padrino::helpers::formbuilder::abstractformbuilder","padrino::helpers::formbuilder::abstractformbuilder","padrino::admin::helpers","padrino::admin::helpers::abstractformbuilder","padrino::helpers::formhelpers","padrino::helpers::formhelpers","padrino::admin::orm::activerecord::base::classmethods","padrino::admin::orm::datamapper::base::classmethods","padrino::admin::orm::mongomapper::base::classmethods","padrino::helpers::assettaghelpers","padrino::helpers::renderhelpers","padrino::admin::orm::abstract::account::instancemethods","padrino::helpers::formbuilder::abstractformbuilder","padrino::helpers::formhelpers","padrino::helpers::formathelpers","padrino::admin::orm::activerecord::base::classmethods","padrino::logger","padrino::helpers::formbuilder::abstractformbuilder","padrino::helpers::formhelpers","padrino::admin::helpers","padrino::application","padrino::application","padrino::application","padrino::helpers","padrino::mailer","padrino","padrino::application","padrino::stat","padrino::helpers::renderhelpers","padrino","padrino::application","padrino::application","padrino::mailer::base","padrino::stat","padrino::application","padrino::stat","padrino::stat","padrino::helpers::formathelpers","padrino::helpers::formbuilder::abstractformbuilder","padrino::helpers::formhelpers","padrino::mailer::mailobject","padrino::mailer::delivery","padrino::admin::helpers","padrino","padrino::logger","padrino::application","padrino::admin::helpers","padrino::helpers::formathelpers","padrino::application","padrino::admin::helpers","padrino::helpers::assettaghelpers","padrino::helpers::assettaghelpers","padrino::helpers::assettaghelpers","padrino::helpers::formbuilder::abstractformbuilder","padrino::helpers::formbuilder::standardformbuilder","padrino::helpers::formhelpers","padrino::admin::helpers","padrino::admin::orm::datamapper::base::classmethods","padrino::helpers::taghelpers","padrino::mailer::base","padrino::helpers::formbuilder::abstractformbuilder","padrino::helpers::formhelpers","padrino::helpers::formbuilder::abstractformbuilder","padrino::helpers::formhelpers","padrino::helpers::formathelpers","padrino::admin::helpers","padrino::mounter","padrino::admin::utils::literal","padrino::admin::orm::datamapper::base::instancemethods","padrino::mailer::delivery","padrino::mailer::delivery","padrino::mailer::delivery","padrino::helpers::formathelpers","padrino::admin::orm::datamapper::base::instancemethods","padrino::helpers::assettaghelpers","padrino::application","padrino::application","padrino::application","padrino::application","padrino::mailer::mailobject","padrino::helpers::formbuilder::abstractformbuilder","padrino","padrino::mailer::delivery","padrino::helpers::formathelpers","padrino::helpers::outputhelpers","files/padrino-admin/readme_rdoc.html","files/padrino-admin/lib/padrino-admin_rb.html","files/padrino-admin/lib/padrino-admin/helpers/authentication_rb.html","files/padrino-admin/lib/padrino-admin/helpers/view_rb.html","files/padrino-admin/lib/padrino-admin/middleware/flash_middleware_rb.html","files/padrino-admin/lib/padrino-admin/orm/abstract_rb.html","files/padrino-admin/lib/padrino-admin/orm/activerecord_rb.html","files/padrino-admin/lib/padrino-admin/orm/datamapper_rb.html","files/padrino-admin/lib/padrino-admin/orm/mongomapper_rb.html","files/padrino-admin/lib/padrino-admin/utils/crypt_rb.html","files/padrino-admin/lib/padrino-admin/utils/literal_rb.html","files/padrino-core/readme_rdoc.html","files/padrino-core/lib/padrino-core/application_rb.html","files/padrino-core/lib/padrino-core/caller_rb.html","files/padrino-core/lib/padrino-core/loader_rb.html","files/padrino-core/lib/padrino-core/logger_rb.html","files/padrino-core/lib/padrino-core/mounter_rb.html","files/padrino-core/lib/padrino-core/reloader_rb.html","files/padrino-core/lib/padrino-core/stat_rb.html","files/padrino-core/lib/padrino-core/tasks_rb.html","files/padrino-core/lib/padrino-core/version_rb.html","files/padrino-helpers/readme_rdoc.html","files/padrino-helpers/lib/padrino-helpers_rb.html","files/padrino-helpers/lib/padrino-helpers/asset_tag_helpers_rb.html","files/padrino-helpers/lib/padrino-helpers/form_builder/abstract_form_builder_rb.html","files/padrino-helpers/lib/padrino-helpers/form_builder/standard_form_builder_rb.html","files/padrino-helpers/lib/padrino-helpers/form_helpers_rb.html","files/padrino-helpers/lib/padrino-helpers/format_helpers_rb.html","files/padrino-helpers/lib/padrino-helpers/output_helpers_rb.html","files/padrino-helpers/lib/padrino-helpers/render_helpers_rb.html","files/padrino-helpers/lib/padrino-helpers/tag_helpers_rb.html","files/padrino-mailer/readme_rdoc.html","files/padrino-mailer/lib/padrino-mailer_rb.html","files/padrino-mailer/lib/padrino-mailer/base_rb.html","files/padrino-mailer/lib/padrino-mailer/delivery_rb.html","files/padrino-mailer/lib/padrino-mailer/mail_object_rb.html"],"info":[["Padrino","padrino-core/lib/padrino-core/caller.rb","classes/Padrino.html"," < ","Manages Padrino version from the VERSION file managed by Jeweler We put this in a separate file so you",1],["Admin","Padrino","classes/Padrino/Admin.html"," < ","",1],["Helpers","Padrino::Admin","classes/Padrino/Admin/Helpers.html"," < ","",1],["AbstractFormBuilder","Padrino::Admin::Helpers","classes/Padrino/Admin/Helpers/AbstractFormBuilder.html"," < ","",1],["Middleware","Padrino::Admin","classes/Padrino/Admin/Middleware.html"," < ","",1],["FlashMiddleware","Padrino::Admin::Middleware","classes/Padrino/Admin/Middleware/FlashMiddleware.html"," < Object","FlashSessionCookieMiddleware passing your session in the URI, when it should be in the cookie This code",1],["Orm","Padrino::Admin","classes/Padrino/Admin/Orm.html"," < ","",1],["Abstract","Padrino::Admin::Orm","classes/Padrino/Admin/Orm/Abstract.html"," < ","",1],["Account","Padrino::Admin::Orm::Abstract","classes/Padrino/Admin/Orm/Abstract/Account.html"," < ","Accoun Extensions An Account must have these column/fields: role:: String email:: String (used as login)",1],["ClassMethods","Padrino::Admin::Orm::Abstract::Account","classes/Padrino/Admin/Orm/Abstract/Account/ClassMethods.html"," < ","",1],["InstanceMethods","Padrino::Admin::Orm::Abstract::Account","classes/Padrino/Admin/Orm/Abstract/Account/InstanceMethods.html"," < ","",1],["Base","Padrino::Admin::Orm::Abstract","classes/Padrino/Admin/Orm/Abstract/Base.html"," < ","In this module we have shared function that are shared with all orm. ",1],["ClassMethods","Padrino::Admin::Orm::Abstract::Base","classes/Padrino/Admin/Orm/Abstract/Base/ClassMethods.html"," < ","",1],["InstanceMethods","Padrino::Admin::Orm::Abstract::Base","classes/Padrino/Admin/Orm/Abstract/Base/InstanceMethods.html"," < ","",1],["ActiveRecord","Padrino::Admin::Orm","classes/Padrino/Admin/Orm/ActiveRecord.html"," < ","",1],["Account","Padrino::Admin::Orm::ActiveRecord","classes/Padrino/Admin/Orm/ActiveRecord/Account.html"," < ","Here extension for Account for ActiveRecord Basically we need only to perform: * Validations (email,",1],["Base","Padrino::Admin::Orm::ActiveRecord","classes/Padrino/Admin/Orm/ActiveRecord/Base.html"," < ","Here basic functions for interact with ActiveRecord ",1],["ClassMethods","Padrino::Admin::Orm::ActiveRecord::Base","classes/Padrino/Admin/Orm/ActiveRecord/Base/ClassMethods.html"," < ","",1],["InstanceMethods","Padrino::Admin::Orm::ActiveRecord::Base","classes/Padrino/Admin/Orm/ActiveRecord/Base/InstanceMethods.html"," < ","",1],["DataMapper","Padrino::Admin::Orm","classes/Padrino/Admin/Orm/DataMapper.html"," < ","",1],["Account","Padrino::Admin::Orm::DataMapper","classes/Padrino/Admin/Orm/DataMapper/Account.html"," < ","Here extension for Account for MongoMapper Basically we need only to perform: * Validations (email, password,",1],["Base","Padrino::Admin::Orm::DataMapper","classes/Padrino/Admin/Orm/DataMapper/Base.html"," < ","Here basic functions for interact with DataMapper ",1],["ClassMethods","Padrino::Admin::Orm::DataMapper::Base","classes/Padrino/Admin/Orm/DataMapper/Base/ClassMethods.html"," < ","",1],["InstanceMethods","Padrino::Admin::Orm::DataMapper::Base","classes/Padrino/Admin/Orm/DataMapper/Base/InstanceMethods.html"," < ","",1],["MongoMapper","Padrino::Admin::Orm","classes/Padrino/Admin/Orm/MongoMapper.html"," < ","",1],["Account","Padrino::Admin::Orm::MongoMapper","classes/Padrino/Admin/Orm/MongoMapper/Account.html"," < ","Here extension for Account for MongoMapper Basically we need only to perform: * Validations (email, password,",1],["Base","Padrino::Admin::Orm::MongoMapper","classes/Padrino/Admin/Orm/MongoMapper/Base.html"," < ","Here basic functions for interact with MongoMapper ",1],["ClassMethods","Padrino::Admin::Orm::MongoMapper::Base","classes/Padrino/Admin/Orm/MongoMapper/Base/ClassMethods.html"," < ","",1],["InstanceMethods","Padrino::Admin::Orm::MongoMapper::Base","classes/Padrino/Admin/Orm/MongoMapper/Base/InstanceMethods.html"," < ","",1],["Utils","Padrino::Admin","classes/Padrino/Admin/Utils.html"," < ","",1],["Crypt","Padrino::Admin::Utils","classes/Padrino/Admin/Utils/Crypt.html"," < ","This util it's used for encrypt/decrypt password. We want password decryptable because generally for",1],["Literal","Padrino::Admin::Utils","classes/Padrino/Admin/Utils/Literal.html"," < ","This module it's used for convert a string in a literal json variable ",1],["Application","Padrino","classes/Padrino/Application.html"," < Sinatra::Application","Subclasses of this become independent Padrino applications (stemming from Sinatra::Application) These",1],["Helpers","Padrino","classes/Padrino/Helpers.html"," < ","",1],["AssetTagHelpers","Padrino::Helpers","classes/Padrino/Helpers/AssetTagHelpers.html"," < ","",1],["FormBuilder","Padrino::Helpers","classes/Padrino/Helpers/FormBuilder.html"," < ","",1],["AbstractFormBuilder","Padrino::Helpers::FormBuilder","classes/Padrino/Helpers/FormBuilder/AbstractFormBuilder.html"," < Object","",1],["StandardFormBuilder","Padrino::Helpers::FormBuilder","classes/Padrino/Helpers/FormBuilder/StandardFormBuilder.html"," < AbstractFormBuilder","",1],["FormHelpers","Padrino::Helpers","classes/Padrino/Helpers/FormHelpers.html"," < ","",1],["FormatHelpers","Padrino::Helpers","classes/Padrino/Helpers/FormatHelpers.html"," < ","",1],["OutputHelpers","Padrino::Helpers","classes/Padrino/Helpers/OutputHelpers.html"," < ","",1],["RenderHelpers","Padrino::Helpers","classes/Padrino/Helpers/RenderHelpers.html"," < ","",1],["TagHelpers","Padrino::Helpers","classes/Padrino/Helpers/TagHelpers.html"," < ","",1],["Logger","Padrino","classes/Padrino/Logger.html"," < Object","",1],["Mailer","Padrino","classes/Padrino/Mailer.html"," < ","",1],["Base","Padrino::Mailer","classes/Padrino/Mailer/Base.html"," < Object","",1],["Delivery","Padrino::Mailer","classes/Padrino/Mailer/Delivery.html"," < ","",1],["MailObject","Padrino::Mailer","classes/Padrino/Mailer/MailObject.html"," < Object","",1],["Mounter","Padrino","classes/Padrino/Mounter.html"," < Object","Represents a particular mounted padrino application Stores the name of the application (app folder name)",1],["RackLogger","Padrino","classes/Padrino/RackLogger.html"," < Object","RackLogger forwards every request to an +app+ given, and logs a line in the Apache common log format",1],["Reloader","Padrino","classes/Padrino/Reloader.html"," < Object","High performant source reloader This class acts as Rack middleware. It is performing a check/reload cycle",1],["Stat","Padrino","classes/Padrino/Stat.html"," < ","What makes it especially suited for use in a any environment is that any file will only be checked once",1],["Tasks","Padrino","classes/Padrino/Tasks.html"," < ","This module it's used for bootstrap with padrino rake thirdy party tasks, in your gem/plugin/extension",1],["<<","Padrino::Logger","classes/Padrino/Logger.html#M000044","(message = nil)","",2],["==","Padrino::Mounter","classes/Padrino/Mounter.html#M000059","(other)","Makes two Mounters equal if they have the same name and uri_root ",2],["admin_menu","Padrino::Admin::Helpers","classes/Padrino/Admin/Helpers.html#M000075","()","Return the admin menu ",2],["allowed?","Padrino::Admin::Helpers","classes/Padrino/Admin/Helpers.html#M000077","()","Returns true if the +current_account+ is allowed to see the requested path For configure this role please",2],["app_object","Padrino::Mounter","classes/Padrino/Mounter.html#M000057","()","Return the class for the app ",2],["authenticate","Padrino::Admin::Orm::Abstract::Account::ClassMethods","classes/Padrino/Admin/Orm/Abstract/Account/ClassMethods.html#M000095","(email, password)","This method it's for authentication purpose ",2],["block_is_erb?","Padrino::Helpers::OutputHelpers","classes/Padrino/Helpers/OutputHelpers.html#M000208","(block)","Used to determine if a block is called from ERB. NOTE: This doesn't actually work yet because the variable",2],["block_is_template?","Padrino::Helpers::OutputHelpers","classes/Padrino/Helpers/OutputHelpers.html#M000199","(block)","Returns true if the block is from an ERB or HAML template; false otherwise. Used to determine if html",2],["body","Padrino::Mailer::Base","classes/Padrino/Mailer/Base.html#M000217","(body_value)","Assigns the body key to the mail attributes either with the rendered body from a template or the given",2],["box","Padrino::Admin::Helpers","classes/Padrino/Admin/Helpers.html#M000090","(title=nil, options={}, &block)","This method generates a new ExtJs BoxComponent. Examples: -box \"My Title\", \"My Subtitle\", :submit =>",2],["build_object","Padrino::Helpers::FormBuilder::AbstractFormBuilder","classes/Padrino/Helpers/FormBuilder/AbstractFormBuilder.html#M000160","(object_or_symbol)","explicit_object is either a symbol or a record Returns a new record of the type specified in the object",2],["build_tmail","Padrino::Mailer::Delivery","classes/Padrino/Mailer/Delivery.html#M000228","(options)","",2],["button_tag","Padrino::Helpers::FormHelpers","classes/Padrino/Helpers/FormHelpers.html#M000188","(caption, options = {})","Constructs a button input from the given options button_tag \"Cancel\", :class => 'clear' ",2],["calculate_paths","Padrino::Application","classes/Padrino/Application.html#M000023","()","Calculates any required paths after app_file and root have been properly configured Executes as part",2],["call","Padrino::Admin::Middleware::FlashMiddleware","classes/Padrino/Admin/Middleware/FlashMiddleware.html#M000088","(env)","",2],["call","Padrino::RackLogger","classes/Padrino/RackLogger.html#M000046","(env)","",2],["call","Padrino::Reloader","classes/Padrino/Reloader.html#M000054","(env)","",2],["called_from","Padrino","classes/Padrino.html#M000010","()","This adds the ablity to instantiate Padrino.load! after Padrino::Application definition. ",2],["caller_files","Padrino","classes/Padrino.html#M000001","()","Like Kernel#caller but excluding certain magic entries and without line / method information; the resulting",2],["caller_locations","Padrino","classes/Padrino.html#M000002","()","",2],["capture_erb","Padrino::Helpers::OutputHelpers","classes/Padrino/Helpers/OutputHelpers.html#M000205","(*args, &block)","Used to capture the html from a block of erb code capture_erb(&block) => '...html...' ",2],["capture_html","Padrino::Helpers::OutputHelpers","classes/Padrino/Helpers/OutputHelpers.html#M000197","(*args, &block)","Captures the html from a block of template code for erb or haml capture_html(&block) => \"...html...\"",2],["changed?","Padrino::Stat","classes/Padrino/Stat.html#M000066","()","",2],["check_box","Padrino::Helpers::FormBuilder::AbstractFormBuilder","classes/Padrino/Helpers/FormBuilder/AbstractFormBuilder.html#M000144","(field, options={})","f.check_box :remember_me, :value => 'true', :uncheck_value => '0' ",2],["check_box_tag","Padrino::Helpers::FormHelpers","classes/Padrino/Helpers/FormHelpers.html#M000184","(name, options={})","Constructs a check_box from the given options check_box_tag :remember_me, :value => 'Yes' ",2],["close","Padrino::Logger","classes/Padrino/Logger.html#M000040","()","Close and remove the current log object. ",2],["column_store","Padrino::Admin::Orm::Abstract::Base::ClassMethods","classes/Padrino/Admin/Orm/Abstract/Base/ClassMethods.html#M000092","(*args)","This method generate store and column config. for lazinies hands instead supply: Model.column_store(\"./../views/model/store.jml\")",2],["concat_content","Padrino::Helpers::OutputHelpers","classes/Padrino/Helpers/OutputHelpers.html#M000198","(text=\"\")","Outputs the given text to the templates buffer directly concat_content(\"This will be output to the template",2],["configured_form_builder_class","Padrino::Helpers::FormHelpers","classes/Padrino/Helpers/FormHelpers.html#M000193","(explicit_builder=nil)","Returns the FormBuilder class to use based on all available setting sources If explicitly defined, returns",2],["content_blocks","Padrino::Helpers::OutputHelpers","classes/Padrino/Helpers/OutputHelpers.html#M000203","()","Retrieves content_blocks stored by content_for or within yield_content content_blocks[:name] => ['...',",2],["content_for","Padrino::Helpers::OutputHelpers","classes/Padrino/Helpers/OutputHelpers.html#M000201","(key, &block)","Capture a block of content to be rendered at a later time. Your blocks can also receive values, which",2],["content_tag","Padrino::Helpers::TagHelpers","classes/Padrino/Helpers/TagHelpers.html#M000211","(*args, &block)","Creates an html tag with given name, content and options content_tag(:p, \"hello\", :class => 'light')",2],["content_type","Padrino::Application","classes/Padrino/Application.html#M000033","(type=nil, params={})","Return the request format, this is useful when we need to respond to a given content_type like: get :index,",2],["controller","Padrino::Application","classes/Padrino/Application.html#M000005","(*extensions, &block)","Method for organize in a better way our routes like: controller :admin do get :index do; ...; end get",2],["current_account","Padrino::Admin::Helpers","classes/Padrino/Admin/Helpers.html#M000074","()","Returns the current_account, it's an instance of <tt>Account</tt> model ",2],["decrypt","Padrino::Admin::Utils::Crypt","classes/Padrino/Admin/Utils/Crypt.html#M000122","(password)","Decrypts the current string using the current key and algorithm specified ",2],["default_configuration!","Padrino::Application","classes/Padrino/Application.html#M000017","()","Defines default settings for Padrino application ",2],["default_errors!","Padrino::Application","classes/Padrino/Application.html#M000022","()","This log errors for production environments ",2],["default_filters!","Padrino::Application","classes/Padrino/Application.html#M000021","()","This filter it's used for know the format of the request, and automatically set the content type. ",2],["default_routes!","Padrino::Application","classes/Padrino/Application.html#M000020","()","We need to add almost __sinatra__ images. ",2],["deliver","Padrino::Mailer::Base","classes/Padrino/Mailer/Base.html#M000219","(mail_name, *args)","Delivers the specified message for mail_name to the intended recipients mail_name corresponds to the",2],["deliver","Padrino::Mailer::MailObject","classes/Padrino/Mailer/MailObject.html#M000223","()","Constructs the delivery attributes for the message and then sends the mail @mail_object.deliver ",2],["delivery_method","Padrino::Mailer::MailObject","classes/Padrino/Mailer/MailObject.html#M000225","()","Returns the delivery method to use for this mail object @mo.delivery_method => :smtp || :sendmail ",2],["distance_of_time_in_words","Padrino::Helpers::FormatHelpers","classes/Padrino/Helpers/FormatHelpers.html#M000183","(from_time, to_time = 0, include_seconds = false, options = {})","Reports the approximate distance in time between two Time or Date objects or integers as seconds. Set",2],["encrypt","Padrino::Admin::Utils::Crypt","classes/Padrino/Admin/Utils/Crypt.html#M000123","(password)","Encrypts the current string using the current key and algorithm specified ",2],["erb_concat","Padrino::Helpers::OutputHelpers","classes/Padrino/Helpers/OutputHelpers.html#M000206","(text)","Concats directly to an erb template erb_concat(\"Direct to buffer\") ",2],["error_messages","Padrino::Helpers::FormBuilder::AbstractFormBuilder","classes/Padrino/Helpers/FormBuilder/AbstractFormBuilder.html#M000129","(*params)","f.error_messages ",2],["error_messages_for","Padrino::Helpers::FormHelpers","classes/Padrino/Helpers/FormHelpers.html#M000168","(*params)","Constructs list html for the errors for a given symbol error_messages_for :user ",2],["errors_keys","Padrino::Admin::Orm::ActiveRecord::Base::InstanceMethods","classes/Padrino/Admin/Orm/ActiveRecord/Base/InstanceMethods.html#M000101","()","Method for get only fields with errors ",2],["errors_keys","Padrino::Admin::Orm::DataMapper::Base::InstanceMethods","classes/Padrino/Admin/Orm/DataMapper/Base/InstanceMethods.html#M000111","()","Method for get only fields with errors ",2],["escape_html","Padrino::Helpers::FormatHelpers","classes/Padrino/Helpers/FormatHelpers.html#M000169","(text)","Returns escaped text to protect against malicious content ",2],["escape_javascript","Padrino::Helpers::FormatHelpers","classes/Padrino/Helpers/FormatHelpers.html#M000195","(html_content)","Used in xxxx.js.erb files to escape html so that it can be passed to javascript from Padrino js_escape_html(\"<h1>Hey</h1>\")",2],["ext_search","Padrino::Admin::Orm::ActiveRecord::Base::ClassMethods","classes/Padrino/Admin/Orm/ActiveRecord/Base/ClassMethods.html#M000105","(params, query={})","Method for perorm a full text search / sorting in ExtJS grids. For build a query you can provide for",2],["ext_search","Padrino::Admin::Orm::DataMapper::Base::ClassMethods","classes/Padrino/Admin/Orm/DataMapper/Base/ClassMethods.html#M000115","(params, query={})","Method for perorm a full text search / sorting in ExtJS grids. For build a query you can provide for",2],["field_error","Padrino::Helpers::FormBuilder::AbstractFormBuilder","classes/Padrino/Helpers/FormBuilder/AbstractFormBuilder.html#M000156","(field, options)","",2],["field_human_name","Padrino::Helpers::FormBuilder::AbstractFormBuilder","classes/Padrino/Helpers/FormBuilder/AbstractFormBuilder.html#M000158","(field)","Returns the human name of the field. Look that use builtin I18n. ",2],["field_id","Padrino::Helpers::FormBuilder::AbstractFormBuilder","classes/Padrino/Helpers/FormBuilder/AbstractFormBuilder.html#M000159","(field, value=nil)","Returns the id for the given field field_id(:username) => \"user_username\" field_id(:gender, :male) =>",2],["field_name","Padrino::Helpers::FormBuilder::AbstractFormBuilder","classes/Padrino/Helpers/FormBuilder/AbstractFormBuilder.html#M000157","(field)","Returns the name for the given field field_name(:username) => \"user[username]\" ",2],["field_set_tag","Padrino::Helpers::FormHelpers","classes/Padrino/Helpers/FormHelpers.html#M000167","(*args, &block)","Constructs a field_set to group fields with given options field_set_tag(\"Office\", :class => 'office-set')",2],["field_types","Padrino::Helpers::FormBuilder::AbstractFormBuilder","classes/Padrino/Helpers/FormBuilder/AbstractFormBuilder.html#M000151","()","Returns the known field types for a formbuilder ",2],["field_value","Padrino::Helpers::FormBuilder::AbstractFormBuilder","classes/Padrino/Helpers/FormBuilder/AbstractFormBuilder.html#M000155","(field)","Returns the value for the object's field field_value(:username) => \"Joey\" ",2],["fields_for","Padrino::Helpers::FormHelpers","classes/Padrino/Helpers/FormHelpers.html#M000165","(object, settings={}, &block)","Constructs form fields for an object using given or default form_builder Used within an existing form",2],["figure_path","Padrino::Stat","classes/Padrino/Stat.html#M000069","(file, paths)","Takes a relative or absolute +file+ name, a couple possible +paths+ that the +file+ might reside in.",2],["file_field","Padrino::Helpers::FormBuilder::AbstractFormBuilder","classes/Padrino/Helpers/FormBuilder/AbstractFormBuilder.html#M000147","(field, options={})","f.file_field :photo, :class => 'avatar' ",2],["file_field_tag","Padrino::Helpers::FormHelpers","classes/Padrino/Helpers/FormHelpers.html#M000186","(name, options={})","Constructs a file field input from the given options file_field_tag :photo, :class => 'long' ",2],["files","Padrino::Tasks","classes/Padrino/Tasks.html#M000071","()","Returns a list of files to handle with padrino rake ",2],["find_view_path","Padrino::Application","classes/Padrino/Application.html#M000028","()","Returns the path to the views directory from root by returning the first that is found ",2],["first_caller","Padrino","classes/Padrino.html#M000000","()","Returns the filename for the file that is the direct caller (first caller) ",2],["flash_tag","Padrino::Helpers::AssetTagHelpers","classes/Padrino/Helpers/AssetTagHelpers.html#M000125","(kind, options={})","Creates a div to display the flash of given type if it exists Examples: flash_tag(:notice, :class =>",2],["flush","Padrino::Logger","classes/Padrino/Logger.html#M000039","()","Flush the entire buffer to the log object. ",2],["form_for","Padrino::Helpers::FormHelpers","classes/Padrino/Helpers/FormHelpers.html#M000164","(object, url, settings={}, &block)","Constructs a form for object using given or default form_builder form_for :user, '/register' do |f| ...",2],["form_tag","Padrino::Helpers::FormHelpers","classes/Padrino/Helpers/FormHelpers.html#M000166","(url, options={}, &block)","Constructs a form without object based on options form_tag '/register' do ... end ",2],["h","Padrino::Helpers::FormatHelpers","classes/Padrino/Helpers/FormatHelpers.html#M000170","(text)","Alias for #escape_html",2],["h!","Padrino::Helpers::FormatHelpers","classes/Padrino/Helpers/FormatHelpers.html#M000172","(text, blank_text = '&nbsp;')","Returns escaped text to protect against malicious content Returns blank if the text is empty ",2],["has","Padrino::Admin::Orm::DataMapper::Base::ClassMethods","classes/Padrino/Admin/Orm/DataMapper/Base/ClassMethods.html#M000117","(cardinality, name, *args)","The aim of this method is act DM as AR, so when you define a many-to-many relation like: has n, :images",2],["has_erb_buffer?","Padrino::Helpers::OutputHelpers","classes/Padrino/Helpers/OutputHelpers.html#M000207","()","Returns true if an erb buffer is detected has_erb_buffer? => true ",2],["hidden_field","Padrino::Helpers::FormBuilder::AbstractFormBuilder","classes/Padrino/Helpers/FormBuilder/AbstractFormBuilder.html#M000134","(field, options={})","f.hidden_field :session_id, :value => \"45\" ",2],["hidden_field_tag","Padrino::Helpers::FormHelpers","classes/Padrino/Helpers/FormHelpers.html#M000177","(name, options={})","Constructs a hidden field input from the given options hidden_field_tag :session_key, :value => \"__secret__\"",2],["hidden_form_method_field","Padrino::Helpers::FormHelpers","classes/Padrino/Helpers/FormHelpers.html#M000192","(desired_method)","returns the hidden method field for 'put' and 'delete' forms Only 'get' and 'post' are allowed within",2],["human_attribute_name","Padrino::Admin::Orm::ActiveRecord::Base::ClassMethods","classes/Padrino/Admin/Orm/ActiveRecord/Base/ClassMethods.html#M000102","(field, options = {})","Transforms attribute key names into a more humane format, such as \"First name\" instead of \"first_name\".",2],["human_attribute_name","Padrino::Admin::Orm::DataMapper::Base::ClassMethods","classes/Padrino/Admin/Orm/DataMapper/Base/ClassMethods.html#M000112","(field, options = {})","Transforms attribute key names into a more humane format, such as \"First name\" instead of \"first_name\".",2],["identity_tag_attributes","Padrino::Helpers::TagHelpers","classes/Padrino/Helpers/TagHelpers.html#M000214","()","Returns a list of attributes which can only contain an identity value (i.e selected) ",2],["image_path","Padrino::Helpers::AssetTagHelpers","classes/Padrino/Helpers/AssetTagHelpers.html#M000138","(src)","Returns the path to the image, either relative or absolute. We search it in your +appname.public+  like",2],["image_submit","Padrino::Helpers::FormBuilder::AbstractFormBuilder","classes/Padrino/Helpers/FormBuilder/AbstractFormBuilder.html#M000149","(source, options={})","f.simage_submitubmit \"buttons/submit.png\", :class => 'large' ",2],["image_submit_block","Padrino::Helpers::FormBuilder::StandardFormBuilder","classes/Padrino/Helpers/FormBuilder/StandardFormBuilder.html#M000163","(source, options={})","image_submit_block(\"submit.png\") ",2],["image_submit_tag","Padrino::Helpers::FormHelpers","classes/Padrino/Helpers/FormHelpers.html#M000189","(source, options={})","Constructs a submit button from the given options submit_tag \"Create\", :class => 'success' ",2],["image_tag","Padrino::Helpers::AssetTagHelpers","classes/Padrino/Helpers/AssetTagHelpers.html#M000131","(url, options={})","Creates an image element with given url and options Example: image_tag('icons/avatar.png') ",2],["inherited","Padrino::Application","classes/Padrino/Application.html#M000003","(subclass)","",2],["input_tag","Padrino::Helpers::TagHelpers","classes/Padrino/Helpers/TagHelpers.html#M000210","(type, options = {})","Creates an html input field with given type and options input_tag :text, :class => \"test\" ",2],["insert_mounted_app","Padrino","classes/Padrino.html#M000062","(mounter)","Inserts a Mounter object into the mounted applications (avoids duplicates) ",2],["javascript_include_tag","Padrino::Helpers::AssetTagHelpers","classes/Padrino/Helpers/AssetTagHelpers.html#M000136","(*sources)","Returns an html script tag for each of the sources provided.  You can pass in the filename without extension",2],["javascript_path","Padrino::Helpers::AssetTagHelpers","classes/Padrino/Helpers/AssetTagHelpers.html#M000143","(source)","Returns the javascript_path appending the default javascripts path if necessary ",2],["javascript_tag","Padrino::Helpers::AssetTagHelpers","classes/Padrino/Helpers/AssetTagHelpers.html#M000142","(source, options={})","javascript_tag 'application', :src => '/javascripts/base/application.js' ",2],["js_escape_html","Padrino::Helpers::FormatHelpers","classes/Padrino/Helpers/FormatHelpers.html#M000196","(html_content)","",2],["label","Padrino::Helpers::FormBuilder::AbstractFormBuilder","classes/Padrino/Helpers/FormBuilder/AbstractFormBuilder.html#M000133","(field, options={})","f.label :username, :caption => \"Nickname\" ",2],["label_tag","Padrino::Helpers::FormHelpers","classes/Padrino/Helpers/FormHelpers.html#M000175","(name, options={}, &block)","Constructs a label tag from the given options label_tag :username, :class => 'long-label' label_tag :username,",2],["layout","Padrino::Application","classes/Padrino/Application.html#M000012","(name=:layout, &block)","With this method we can use layout like rails do or if a block given like sinatra By default we look",2],["link_to","Padrino::Helpers::AssetTagHelpers","classes/Padrino/Helpers/AssetTagHelpers.html#M000126","(*args, &block)","Creates a link element with given name, url and options Examples: link_to 'click me', '/dashboard', :class",2],["load!","Padrino","classes/Padrino.html#M000008","()","Requires necessary dependencies as well as application files from root lib and models ",2],["load_dependencies","Padrino","classes/Padrino.html#M000018","(*paths)","Attempts to load all dependency libs that we need. If you use this method we can perform correctly a",2],["load_paths","Padrino::Application","classes/Padrino/Application.html#M000026","()","Returns the load_paths for the application (relative to the application root) ",2],["loaded?","Padrino","classes/Padrino.html#M000011","()","Return true if Padrino was loaded with Padrino.load! ",2],["locate_app_file","Padrino::Mounter","classes/Padrino/Mounter.html#M000058","()","Returns the determined location of the mounted application main file ",2],["logged_in?","Padrino::Admin::Helpers","classes/Padrino/Admin/Helpers.html#M000073","()","Returns true if +current_account+ is logged and active. ",2],["logger","Padrino","classes/Padrino.html#M000031","()","Returns the padrino logger Examples: logger.debug \"foo\" logger.warn \"bar\" ",2],["login_required","Padrino::Admin::Helpers","classes/Padrino/Admin/Helpers.html#M000078","()","Returns a helper to pass in a +before_filter+ for check if an account are: +logged_in?+ and +allowed?+",2],["mail","Padrino::Mailer::Delivery","classes/Padrino/Mailer/Delivery.html#M000224","(options)","",2],["mail_fields","Padrino::Mailer::Base","classes/Padrino/Mailer/Base.html#M000215","()","Returns the available mail fields when composing a message ",2],["mail_to","Padrino::Helpers::AssetTagHelpers","classes/Padrino/Helpers/AssetTagHelpers.html#M000127","(email, caption=nil, mail_options={})","Creates a mail link element with given name and caption Examples: mail_to \"me@demo.com\"             =>",2],["map_onto","Padrino::Mounter","classes/Padrino/Mounter.html#M000056","(builder)","Maps Padrino application onto a Rack::Builder For use in constructing a Rack application @app.map_onto(@builder)",2],["meta_tag","Padrino::Helpers::AssetTagHelpers","classes/Padrino/Helpers/AssetTagHelpers.html#M000130","(content, options={})","Creates a meta element with the content and given options Examples: meta_tag \"weblog,news\", :name =>",2],["method_missing","Padrino::Mailer::Base","classes/Padrino/Mailer/Base.html#M000221","(method_sym, *arguments, &block)","Handles method missing for a mailer class. Delivers a message based on the method being called i.e #deliver_birthday_message(22)",2],["mount","Padrino","classes/Padrino.html#M000064","(name, options={})","Mounts a new sub-application onto Padrino project Padrino.mount(\"blog_app\").to(\"/blog\") ",2],["mount_core","Padrino","classes/Padrino.html#M000063","(*args)","Mounts the core application onto Padrino project with given app settings (file, class, root) Examples:",2],["mounted_apps","Padrino","classes/Padrino.html#M000061","()","Returns the mounted padrino applications (MountedApp objects) ",2],["mounted_root","Padrino","classes/Padrino.html#M000060","(*args)","Returns the root to the mounted apps base directory ",2],["new","Padrino::Admin::Middleware::FlashMiddleware","classes/Padrino/Admin/Middleware/FlashMiddleware.html#M000087","(app, session_key = 'session_id')","",2],["new","Padrino::Application","classes/Padrino/Application.html#M000004","(*args, &bk)","Hooks into when a new instance of the application is created This is used because putting the configuration",2],["new","Padrino::Helpers::FormBuilder::AbstractFormBuilder","classes/Padrino/Helpers/FormBuilder/AbstractFormBuilder.html#M000128","(template, object)","",2],["new","Padrino::Logger","classes/Padrino/Logger.html#M000034","(options={})","To initialize the logger you create a new object, proxies to set_log. ==== Options can be: :stream::",2],["new","Padrino::Mailer::Base","classes/Padrino/Mailer/Base.html#M000216","(mail_name=nil)","",2],["new","Padrino::Mailer::MailObject","classes/Padrino/Mailer/MailObject.html#M000222","(mail_attributes={}, smtp_settings={})","",2],["new","Padrino::Mounter","classes/Padrino/Mounter.html#M000052","(name, options={})","",2],["new","Padrino::RackLogger","classes/Padrino/RackLogger.html#M000045","(app)","",2],["new","Padrino::Reloader","classes/Padrino/Reloader.html#M000053","(app, cooldown = 1)","",2],["new_record?","Padrino::Admin::Orm::DataMapper::Base::InstanceMethods","classes/Padrino/Admin/Orm/DataMapper/Base/InstanceMethods.html#M000108","()","This is an alias method to allow us to don't see deprecations  and keep compatibility with new DataMapper",2],["object_class","Padrino::Helpers::FormBuilder::AbstractFormBuilder","classes/Padrino/Helpers/FormBuilder/AbstractFormBuilder.html#M000161","(explicit_object)","Returns the class type for the given object ",2],["object_name","Padrino::Helpers::FormBuilder::AbstractFormBuilder","classes/Padrino/Helpers/FormBuilder/AbstractFormBuilder.html#M000152","()","Returns the object's models name => user_assignment ",2],["open_window_grid","Padrino::Admin::Helpers","classes/Padrino/Admin/Helpers.html#M000093","(object_name, method, options={})","Open a Standard window that can contain a grid. Works like a select_tag. Options can be: :with:: name",2],["open_window_grid","Padrino::Admin::Helpers::AbstractFormBuilder","classes/Padrino/Admin/Helpers/AbstractFormBuilder.html#M000099","(field, options={})","f.open_window_grid :upload_ids, :brand_ids, :with => :brands, :get => :id, :show => :name ",2],["options_for_select","Padrino::Helpers::FormHelpers","classes/Padrino/Helpers/FormHelpers.html#M000191","(option_items, selected_value=nil)","Returns the options tags for a select based on the given option items ",2],["options_from_collection","Padrino::Helpers::FormHelpers","classes/Padrino/Helpers/FormHelpers.html#M000190","(collection, fields)","Returns an array of option items for a select field based on the given collection fields is an array",2],["orm","Padrino::Admin::Orm::ActiveRecord::Base::ClassMethods","classes/Padrino/Admin/Orm/ActiveRecord/Base/ClassMethods.html#M000104","()","Return :activerecord ",2],["orm","Padrino::Admin::Orm::DataMapper::Base::ClassMethods","classes/Padrino/Admin/Orm/DataMapper/Base/ClassMethods.html#M000114","()","Return :activerecord ",2],["orm","Padrino::Admin::Orm::MongoMapper::Base::ClassMethods","classes/Padrino/Admin/Orm/MongoMapper/Base/ClassMethods.html#M000118","()","Return :activerecord ",2],["parse_conditions","Padrino::Helpers::AssetTagHelpers","classes/Padrino/Helpers/AssetTagHelpers.html#M000154","(url, options)","Parse link_to options for give correct conditions ",2],["partial","Padrino::Helpers::RenderHelpers","classes/Padrino/Helpers/RenderHelpers.html#M000200","(template, options={})","Partials implementation which includes collections support partial 'photo/_item', :object => @photo partial",2],["password_clean","Padrino::Admin::Orm::Abstract::Account::InstanceMethods","classes/Padrino/Admin/Orm/Abstract/Account/InstanceMethods.html#M000096","()","This method it's used for retrive the original password. ",2],["password_field","Padrino::Helpers::FormBuilder::AbstractFormBuilder","classes/Padrino/Helpers/FormBuilder/AbstractFormBuilder.html#M000140","(field, options={})","f.password_field :password, :id => 'password' ",2],["password_field_tag","Padrino::Helpers::FormHelpers","classes/Padrino/Helpers/FormHelpers.html#M000181","(name, options={})","Constructs a password field input from the given options password_field_tag :password, :class => 'long'",2],["pluralize","Padrino::Helpers::FormatHelpers","classes/Padrino/Helpers/FormatHelpers.html#M000174","(count, singular, plural = nil)","Attempts to pluralize the singular word unless count is 1. If plural is supplied, it will use that when",2],["properties","Padrino::Admin::Orm::ActiveRecord::Base::ClassMethods","classes/Padrino/Admin/Orm/ActiveRecord/Base/ClassMethods.html#M000103","()","Alias method for get columns names ",2],["push","Padrino::Logger","classes/Padrino/Logger.html#M000043","(message = nil, level = nil)","Appends a message to the log. The methods yield to an optional block and the output of this block will",2],["radio_button","Padrino::Helpers::FormBuilder::AbstractFormBuilder","classes/Padrino/Helpers/FormBuilder/AbstractFormBuilder.html#M000146","(field, options={})","f.radio_button :gender, :value => 'male' ",2],["radio_button_tag","Padrino::Helpers::FormHelpers","classes/Padrino/Helpers/FormHelpers.html#M000185","(name, options={})","Constructs a radio_button from the given options radio_button_tag :remember_me, :value => 'true' ",2],["redirect_back_or_default","Padrino::Admin::Helpers","classes/Padrino/Admin/Helpers.html#M000080","(default)","Redirect the account to the page that requested an authentication or if the account is not allowed/logged",2],["register_framework_extensions","Padrino::Application","classes/Padrino/Application.html#M000025","()","Registers all desired padrino extension helpers ",2],["register_initializer","Padrino::Application","classes/Padrino/Application.html#M000029","(file_path)","Registers an initializer with the application register_initializer('/path/to/initializer') ",2],["register_initializers","Padrino::Application","classes/Padrino/Application.html#M000024","()","Requires the middleware and initializer modules to configure components ",2],["registered","Padrino::Helpers","classes/Padrino/Helpers.html#M000213","(app)","",2],["registered","Padrino::Mailer","classes/Padrino/Mailer.html#M000231","(app)","",2],["reload!","Padrino","classes/Padrino.html#M000009","()","Method for reloading required applications and their files ",2],["reload!","Padrino::Application","classes/Padrino/Application.html#M000013","()","Reloads the application files from all defined load paths ",2],["reload!","Padrino::Stat","classes/Padrino/Stat.html#M000065","()","",2],["render_partial","Padrino::Helpers::RenderHelpers","classes/Padrino/Helpers/RenderHelpers.html#M000204","(template, options={})","Alias for #partial",2],["require_dependencies","Padrino","classes/Padrino.html#M000015","(*paths)","Attempts to require all dependency libs that we need. If you use this method we can perform correctly",2],["require_load_paths","Padrino::Application","classes/Padrino/Application.html#M000027","()","Requires all files within the application load paths ",2],["reset_routes!","Padrino::Application","classes/Padrino/Application.html#M000014","()","Resets application routes to only routes not defined by the user ",2],["respond_to?","Padrino::Mailer::Base","classes/Padrino/Mailer/Base.html#M000220","(method_sym, include_private = false)","Returns true if a mail exists with the name being delivered ",2],["rotation","Padrino::Stat","classes/Padrino/Stat.html#M000068","()","",2],["router","Padrino::Application","classes/Padrino/Application.html#M000006","()","Usher router, for fatures and configurations see: http://github.com/joshbuddy/usher Examples: router.add_route('/greedy/{!:greed,.*}')",2],["safe_load","Padrino::Stat","classes/Padrino/Stat.html#M000067","(file, mtime)","A safe Kernel::load, issuing the hooks depending on the results ",2],["safe_stat","Padrino::Stat","classes/Padrino/Stat.html#M000070","(file)","",2],["sanitize_html","Padrino::Helpers::FormatHelpers","classes/Padrino/Helpers/FormatHelpers.html#M000171","(text)","Alias for #escape_html",2],["select","Padrino::Helpers::FormBuilder::AbstractFormBuilder","classes/Padrino/Helpers/FormBuilder/AbstractFormBuilder.html#M000141","(field, options={})","f.select :color, :options => ['red', 'green'], :include_blank => true f.select :color, :collection =>",2],["select_tag","Padrino::Helpers::FormHelpers","classes/Padrino/Helpers/FormHelpers.html#M000182","(name, options={})","Constructs a check_box from the given options options = [['caption', 'value'], ['Green', 'green1'], ['Blue',",2],["send_mail","Padrino::Mailer::MailObject","classes/Padrino/Mailer/MailObject.html#M000227","(delivery_attributes)","Performs the actual email sending ",2],["sendmail_binary","Padrino::Mailer::Delivery","classes/Padrino/Mailer/Delivery.html#M000229","()","",2],["set_current_account","Padrino::Admin::Helpers","classes/Padrino/Admin/Helpers.html#M000076","(account=nil)","Ovverride the current_account, you must provide an instance of Account Model Examples: current_account",2],["set_load_paths","Padrino","classes/Padrino.html#M000019","(*paths)","Concat to $LOAD_PATH the given paths ",2],["setup!","Padrino::Logger","classes/Padrino/Logger.html#M000032","()","Setup a new logger ",2],["setup_application!","Padrino::Application","classes/Padrino/Application.html#M000016","()","Setup the application by registering initializers, load paths and logger Invoked automatically when an",2],["show_messages_for","Padrino::Admin::Helpers","classes/Padrino/Admin/Helpers.html#M000086","(*objects)","This method work like error_message_for but use an Ext.Message.show({..}) ",2],["simple_format","Padrino::Helpers::FormatHelpers","classes/Padrino/Helpers/FormatHelpers.html#M000173","(text, html_options={})","Returns text transformed into HTML using simple formatting rules. Two or more consecutive newlines(\\n\\n)",2],["static_file?","Padrino::Application","classes/Padrino/Application.html#M000038","(path_info)","This is mostly just a helper so request.path_info isn't changed when serving files from the public directory",2],["store_location!","Padrino::Admin::Helpers","classes/Padrino/Admin/Helpers.html#M000079","()","Store in session[:return_to] the request.fullpath ",2],["stylesheet_link_tag","Padrino::Helpers::AssetTagHelpers","classes/Padrino/Helpers/AssetTagHelpers.html#M000132","(*sources)","Returns an html script tag for each of the sources provided.  You can pass in the filename without extension",2],["stylesheet_path","Padrino::Helpers::AssetTagHelpers","classes/Padrino/Helpers/AssetTagHelpers.html#M000145","(source)","Returns the stylesheet_path appending the default stylesheets path if necessary ",2],["stylesheet_tag","Padrino::Helpers::AssetTagHelpers","classes/Padrino/Helpers/AssetTagHelpers.html#M000139","(source, options={})","stylesheet_tag('style', :media => 'screen') ",2],["submit","Padrino::Helpers::FormBuilder::AbstractFormBuilder","classes/Padrino/Helpers/FormBuilder/AbstractFormBuilder.html#M000148","(caption=\"Submit\", options={})","f.submit \"Update\", :class => 'large' ",2],["submit_block","Padrino::Helpers::FormBuilder::StandardFormBuilder","classes/Padrino/Helpers/FormBuilder/StandardFormBuilder.html#M000162","(caption, options={})","submit_block(\"Update\") ",2],["submit_tag","Padrino::Helpers::FormHelpers","classes/Padrino/Helpers/FormHelpers.html#M000187","(caption=\"Submit\", options={})","Constructs a submit button from the given options submit_tag \"Create\", :class => 'success' ",2],["tab","Padrino::Admin::Helpers","classes/Padrino/Admin/Helpers.html#M000089","(name, options={}, &block)","This method add tab for in your view. First argument is the name and title of the tab, an interesting",2],["table_name","Padrino::Admin::Orm::DataMapper::Base::ClassMethods","classes/Padrino/Admin/Orm/DataMapper/Base/ClassMethods.html#M000113","()","Return the name of the Table Because in some unkown circumstances +storage_names[:default]+ give us an",2],["tag","Padrino::Helpers::TagHelpers","classes/Padrino/Helpers/TagHelpers.html#M000212","(name, options={})","Creates an html tag with the given name and options tag(:br, :style => 'clear:both') tag(:p, :content",2],["template_path","Padrino::Mailer::Base","classes/Padrino/Mailer/Base.html#M000218","()","Returns the path to the email template searched for using glob pattern ",2],["text_area","Padrino::Helpers::FormBuilder::AbstractFormBuilder","classes/Padrino/Helpers/FormBuilder/AbstractFormBuilder.html#M000137","(field, options={})","f.text_area :summary, :value => \"(enter summary)\", :id => 'summary' ",2],["text_area_tag","Padrino::Helpers::FormHelpers","classes/Padrino/Helpers/FormHelpers.html#M000180","(name, options={})","Constructs a text area input from the given options text_area_tag :username, :class => 'long', :value",2],["text_field","Padrino::Helpers::FormBuilder::AbstractFormBuilder","classes/Padrino/Helpers/FormBuilder/AbstractFormBuilder.html#M000135","(field, options={})","f.text_field :username, :value => \"(blank)\", :id => 'username' ",2],["text_field_tag","Padrino::Helpers::FormHelpers","classes/Padrino/Helpers/FormHelpers.html#M000179","(name, options={})","Constructs a text field input from the given options text_field_tag :username, :class => 'long' ",2],["time_ago_in_words","Padrino::Helpers::FormatHelpers","classes/Padrino/Helpers/FormatHelpers.html#M000194","(from_time, include_seconds = false)","Like distance_of_time_in_words, but where <tt>to_time</tt> is fixed to <tt>Time.now</tt>. ==== Examples",2],["title","Padrino::Admin::Helpers","classes/Padrino/Admin/Helpers.html#M000085","(title)","Set the title of the page. An interesting thing wose that this helper  try to translate itself to your",2],["to","Padrino::Mounter","classes/Padrino/Mounter.html#M000055","(mount_url)","Registers the mounted application onto Padrino Example: Mounter.new(\"blog_app\").to(\"/blog\") ",2],["to_l","Padrino::Admin::Utils::Literal","classes/Padrino/Admin/Utils/Literal.html#M000121","()","This method return a json literal variable ",2],["to_param","Padrino::Admin::Orm::DataMapper::Base::InstanceMethods","classes/Padrino/Admin/Orm/DataMapper/Base/InstanceMethods.html#M000109","()","Returns a String, which Padrino uses for constructing an URL to this object.  The default implementation",2],["transport","Padrino::Mailer::Delivery","classes/Padrino/Mailer/Delivery.html#M000230","(tmail)","",2],["transport_via_sendmail","Padrino::Mailer::Delivery","classes/Padrino/Mailer/Delivery.html#M000233","(tmail, options={})","",2],["transport_via_smtp","Padrino::Mailer::Delivery","classes/Padrino/Mailer/Delivery.html#M000234","(tmail, options={:smtp => {}})","",2],["truncate","Padrino::Helpers::FormatHelpers","classes/Padrino/Helpers/FormatHelpers.html#M000176","(text, *args)","Truncates a given text after a given :length if text is longer than :length (defaults to 30). The last",2],["update_attributes","Padrino::Admin::Orm::DataMapper::Base::InstanceMethods","classes/Padrino/Admin/Orm/DataMapper/Base/InstanceMethods.html#M000110","(attributes = {})","Update attributes is deprecated but for compatibility with other ORM we support them. ",2],["uri_root_path","Padrino::Helpers::AssetTagHelpers","classes/Padrino/Helpers/AssetTagHelpers.html#M000150","(*paths)","Returns the uri root of the application, defaulting to '/' ",2],["url","Padrino::Application","classes/Padrino/Application.html#M000035","(name, *params)","Instance method for url generation like: url(:show, :id => 1) url(:show, :name => :test) url(\"/show/:id/:name\",",2],["url","Padrino::Application","classes/Padrino/Application.html#M000007","(name, *params)","Instance method for url generation like: url(:show, :id => 1) url(:show, :name => :test) url(\"/show/:id/:name\",",2],["url_for","Padrino::Application","classes/Padrino/Application.html#M000037","(name, *params)","Alias for #url",2],["url_for","Padrino::Application","classes/Padrino/Application.html#M000036","(name, *params)","Alias for #url",2],["using_smtp?","Padrino::Mailer::MailObject","classes/Padrino/Mailer/MailObject.html#M000226","()","Returns true if the mail object is going to be delivered using smtp ",2],["values_matches_field?","Padrino::Helpers::FormBuilder::AbstractFormBuilder","classes/Padrino/Helpers/FormBuilder/AbstractFormBuilder.html#M000153","(field, value)","Returns true if the value matches the value in the field field_has_value?(:gender, 'male') ",2],["version","Padrino","classes/Padrino.html#M000072","()","Return the current Padrino version ",2],["via_options","Padrino::Mailer::Delivery","classes/Padrino/Mailer/Delivery.html#M000232","()","",2],["word_wrap","Padrino::Helpers::FormatHelpers","classes/Padrino/Helpers/FormatHelpers.html#M000178","(text, *args)","Wraps the text into lines no longer than line_width width. This method breaks on the first whitespace",2],["yield_content","Padrino::Helpers::OutputHelpers","classes/Padrino/Helpers/OutputHelpers.html#M000202","(key, *args)","Render the captured content blocks for a given key. You can also pass values to the content blocks by",2],["README.rdoc","files/padrino-admin/README_rdoc.html","files/padrino-admin/README_rdoc.html","","= Admin Dashboard and Authentication (padrino-admin)  === Overview  Padrino has a beautiful Ajax Admin,",3],["padrino-admin.rb","files/padrino-admin/lib/padrino-admin_rb.html","files/padrino-admin/lib/padrino-admin_rb.html","","",3],["authentication.rb","files/padrino-admin/lib/padrino-admin/helpers/authentication_rb.html","files/padrino-admin/lib/padrino-admin/helpers/authentication_rb.html","","",3],["view.rb","files/padrino-admin/lib/padrino-admin/helpers/view_rb.html","files/padrino-admin/lib/padrino-admin/helpers/view_rb.html","","",3],["flash_middleware.rb","files/padrino-admin/lib/padrino-admin/middleware/flash_middleware_rb.html","files/padrino-admin/lib/padrino-admin/middleware/flash_middleware_rb.html","","",3],["abstract.rb","files/padrino-admin/lib/padrino-admin/orm/abstract_rb.html","files/padrino-admin/lib/padrino-admin/orm/abstract_rb.html","","",3],["activerecord.rb","files/padrino-admin/lib/padrino-admin/orm/activerecord_rb.html","files/padrino-admin/lib/padrino-admin/orm/activerecord_rb.html","","",3],["datamapper.rb","files/padrino-admin/lib/padrino-admin/orm/datamapper_rb.html","files/padrino-admin/lib/padrino-admin/orm/datamapper_rb.html","","",3],["mongomapper.rb","files/padrino-admin/lib/padrino-admin/orm/mongomapper_rb.html","files/padrino-admin/lib/padrino-admin/orm/mongomapper_rb.html","","",3],["crypt.rb","files/padrino-admin/lib/padrino-admin/utils/crypt_rb.html","files/padrino-admin/lib/padrino-admin/utils/crypt_rb.html","","",3],["literal.rb","files/padrino-admin/lib/padrino-admin/utils/literal_rb.html","files/padrino-admin/lib/padrino-admin/utils/literal_rb.html","","",3],["README.rdoc","files/padrino-core/README_rdoc.html","files/padrino-core/README_rdoc.html","","= Padrino (padrino-core)  Padrino is the godfather of Sinatra.  == Preface  Padrino is a ruby framework",3],["application.rb","files/padrino-core/lib/padrino-core/application_rb.html","files/padrino-core/lib/padrino-core/application_rb.html","","",3],["caller.rb","files/padrino-core/lib/padrino-core/caller_rb.html","files/padrino-core/lib/padrino-core/caller_rb.html","","",3],["loader.rb","files/padrino-core/lib/padrino-core/loader_rb.html","files/padrino-core/lib/padrino-core/loader_rb.html","","",3],["logger.rb","files/padrino-core/lib/padrino-core/logger_rb.html","files/padrino-core/lib/padrino-core/logger_rb.html","","Defines our PADRINO_LOG_LEVEL ",3],["mounter.rb","files/padrino-core/lib/padrino-core/mounter_rb.html","files/padrino-core/lib/padrino-core/mounter_rb.html","","",3],["reloader.rb","files/padrino-core/lib/padrino-core/reloader_rb.html","files/padrino-core/lib/padrino-core/reloader_rb.html","","",3],["stat.rb","files/padrino-core/lib/padrino-core/stat_rb.html","files/padrino-core/lib/padrino-core/stat_rb.html","","",3],["tasks.rb","files/padrino-core/lib/padrino-core/tasks_rb.html","files/padrino-core/lib/padrino-core/tasks_rb.html","","",3],["version.rb","files/padrino-core/lib/padrino-core/version_rb.html","files/padrino-core/lib/padrino-core/version_rb.html","","Manages Padrino version from the VERSION file managed by Jeweler We put this in a separate file so you",3],["README.rdoc","files/padrino-helpers/README_rdoc.html","files/padrino-helpers/README_rdoc.html","","= Application Extensions and Helpers (padrino-helpers)  === Overview  This component provides a great",3],["padrino-helpers.rb","files/padrino-helpers/lib/padrino-helpers_rb.html","files/padrino-helpers/lib/padrino-helpers_rb.html","","",3],["asset_tag_helpers.rb","files/padrino-helpers/lib/padrino-helpers/asset_tag_helpers_rb.html","files/padrino-helpers/lib/padrino-helpers/asset_tag_helpers_rb.html","","",3],["abstract_form_builder.rb","files/padrino-helpers/lib/padrino-helpers/form_builder/abstract_form_builder_rb.html","files/padrino-helpers/lib/padrino-helpers/form_builder/abstract_form_builder_rb.html","","",3],["standard_form_builder.rb","files/padrino-helpers/lib/padrino-helpers/form_builder/standard_form_builder_rb.html","files/padrino-helpers/lib/padrino-helpers/form_builder/standard_form_builder_rb.html","","",3],["form_helpers.rb","files/padrino-helpers/lib/padrino-helpers/form_helpers_rb.html","files/padrino-helpers/lib/padrino-helpers/form_helpers_rb.html","","",3],["format_helpers.rb","files/padrino-helpers/lib/padrino-helpers/format_helpers_rb.html","files/padrino-helpers/lib/padrino-helpers/format_helpers_rb.html","","",3],["output_helpers.rb","files/padrino-helpers/lib/padrino-helpers/output_helpers_rb.html","files/padrino-helpers/lib/padrino-helpers/output_helpers_rb.html","","",3],["render_helpers.rb","files/padrino-helpers/lib/padrino-helpers/render_helpers_rb.html","files/padrino-helpers/lib/padrino-helpers/render_helpers_rb.html","","",3],["tag_helpers.rb","files/padrino-helpers/lib/padrino-helpers/tag_helpers_rb.html","files/padrino-helpers/lib/padrino-helpers/tag_helpers_rb.html","","",3],["README.rdoc","files/padrino-mailer/README_rdoc.html","files/padrino-mailer/README_rdoc.html","","= Simple Mailer Support (padrino-mailer)  === Overview  This component uses an enhanced version of the",3],["padrino-mailer.rb","files/padrino-mailer/lib/padrino-mailer_rb.html","files/padrino-mailer/lib/padrino-mailer_rb.html","","",3],["base.rb","files/padrino-mailer/lib/padrino-mailer/base_rb.html","files/padrino-mailer/lib/padrino-mailer/base_rb.html","","",3],["delivery.rb","files/padrino-mailer/lib/padrino-mailer/delivery_rb.html","files/padrino-mailer/lib/padrino-mailer/delivery_rb.html","","",3],["mail_object.rb","files/padrino-mailer/lib/padrino-mailer/mail_object_rb.html","files/padrino-mailer/lib/padrino-mailer/mail_object_rb.html","","This represents a particular mail object which will need to be sent A mail_object requires the mail attributes",3]]}}